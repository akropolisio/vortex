name: Lint

on:
  push:
    branches:
      - main
      - develop
  pull_request:

jobs:
  solidity:
    runs-on: ubuntu-latest

    steps:
      - name: Check out github repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Setup node.js
        uses: actions/setup-node@v1
        with:
          node-version: "14.x"

      - name: Set yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Restore yarn cache
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: |
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
            ${{ runner.os }}-yarn-
      - name: Install node.js dependencies
        run: |
          git clone https://github.com/shuklaayush/hardhat.git
          cd hardhat
          git checkout fix/arbitrum
          yarn --frozen-lockfile
          yarn build
          cd packages/hardhat-core
          yarn pack
          cd ../../..
          yarn add ./hardhat/packages/hardhat-core/hardhat-v2.6.2.tgz

      - name: Run linter on *.sol and *.json
        run: yarn lint:check 

  commits:
    runs-on: ubuntu-latest

    steps:
      - name: Check out github repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Run commitlint
        uses: wagoid/commitlint-github-action@v2

  brownie:
    runs-on: ubuntu-latest

    steps:
      - name: Check out github repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Set up python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Set pip cache directory path
        id: pip-cache-dir-path
        run: |
          echo "::set-output name=dir::$(pip cache dir)"
      - name: Restore pip cache
        uses: actions/cache@v2
        id: pip-cache
        with:
          path: |
            ${{ steps.pip-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
            ${{ runner.os }}-pip-
      - name: Install python dependencies
        run: pip install -r requirements.txt

      - name: Run black
        run: black --check --include "(tests)" .

  slither:
    runs-on: ubuntu-latest
    name: Solidity Security
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: actions/setup-node@v1.4.4
        with:
          node-version: "12"
      - uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Prepare environment
        run: |
          npm install -g ganache-cli@6.12.1
          pip3 install solc-select
          solc-select install 0.8.4
          solc-select use 0.8.4
          pip3 install slither-analyzer
          pip3 install -r requirements-dev.txt
      - name: Prepare contracts
        env:
          WEB3_INFURA_PROJECT_ID: ${{ secrets.WEB3_INFURA_PROJECT_ID }}
          MORALIS_PROJECT_ID: ${{ secrets.moralis_project_id }}
        shell: bash
        run: |
          brownie networks import network-config.yaml true
          npm run sec:flatten
      - name: Slither Static Analysis
        uses: luisfontes19/slither-static-analysis-action@v0.3.2
        with:
          slither-version: "0.6.13"
          run-npm-install: true
          high-threshold: 0
          medium-threshold: 20
          low-threshold: 30
          optimization-threshold: 5
          informative-threshold: 50
          projectPath: "./flattened"
